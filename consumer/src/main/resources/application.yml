server:
  port: 9999

spring:
  application:
    name: consumer
  cloud:
    openfeign:
#      开启断路器 可以使用如 spring-cloud-starter-circuitbreaker-resilience4j2/spring-cloud-starter-circuitbreaker-retry
#      将会执行@FeignClient对应的fallback/fallbackFactory方法。
      circuitbreaker:
        enabled: true
#       新版本默认的负载均衡 由spring-cloud-loadbalancer提供，需要实现ReactorServiceInstanceLoadBalancer方法 默认RoundRobinLoadBalancer


#这个配置是针对于某个请求来进行熔断，而不是结合远程调用，可以实现异常熔断、并发熔断、限流、慢调用熔断
resilience4j.circuitbreaker:
  configs:
    default:
      # 熔断器打开的失败阈值
      failureRateThreshold: 30
      # 默认滑动窗口大小，circuitbreaker使用基于计数和时间范围滑动窗口聚合统计失败率
      slidingWindowSize: 10
      # 计算比率的最小值，和滑动窗口大小去最小值，即当请求发生5次才会计算失败率
      minimumNumberOfCalls: 5
      # 滑动窗口类型，默认为基于计数的滑动窗口
      slidingWindowType: TIME_BASED
      # 半开状态允许的请求数
      permittedNumberOfCallsInHalfOpenState: 3
      # 是否自动从打开到半开
      automaticTransitionFromOpenToHalfOpenEnabled: true
      # 熔断器从打开到半开需要的时间
      waitDurationInOpenState: 2s
      recordExceptions:
        - java.lang.Exception
  instances:
    consumer2-test:
      baseConfig: default
